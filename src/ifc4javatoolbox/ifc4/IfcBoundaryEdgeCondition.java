/* Generated By: IFC Tools Project EXPRESS TO JAVA COMPILER: Do not edit this file!! */
package ifc4javatoolbox.ifc4;
/**
 * This is a default implementation of the entity IfcBoundaryEdgeCondition<br><br>
 *<br><br>
 * Copyright: CC BY-NC-SA 3.0 DE (cc) 2013 Eike Tauscher and Michael Theiler<br><br>
 * The whole package including this class is licensed under<br>
 * <a rel='license' href='http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en/'>
 * Creative Commons Attribution-Non-Commercial-Share Alike 3.0 Germany</a>.<br><br>
 * If you are using the package or parts of it in any commercial way, a commercial license is required. 
 * Visit <a href='http://www.ifctoolsproject.com'>http://www.ifctoolsproject.com</a> for more information
 * or contact us directly: <a href='mailto:info@ifctoolsproject.com'>info@ifctoolsproject.com</a><br>
 */
public class IfcBoundaryEdgeCondition extends IfcBoundaryCondition implements ClassInterface
{
	private static final String[] nonInverseAttributes = new String[]{"IfcLabel","IfcModulusOfTranslationalSubgradeReactionSelect","IfcModulusOfTranslationalSubgradeReactionSelect","IfcModulusOfTranslationalSubgradeReactionSelect","IfcModulusOfRotationalSubgradeReactionSelect","IfcModulusOfRotationalSubgradeReactionSelect","IfcModulusOfRotationalSubgradeReactionSelect"};
	private java.util.ArrayList<CloneableObject> stepParameter = null;
	private java.util.HashSet<ObjectChangeListener> listenerList = null;
	protected int stepLineNumber;
	/** TranslationalStiffnessByLengthX is an OPTIONAL attribute**/
	protected IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthX;
	/** TranslationalStiffnessByLengthY is an OPTIONAL attribute**/
	protected IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthY;
	/** TranslationalStiffnessByLengthZ is an OPTIONAL attribute**/
	protected IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthZ;
	/** RotationalStiffnessByLengthX is an OPTIONAL attribute**/
	protected IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthX;
	/** RotationalStiffnessByLengthY is an OPTIONAL attribute**/
	protected IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthY;
	/** RotationalStiffnessByLengthZ is an OPTIONAL attribute**/
	protected IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthZ;
	/**
	* The default constructor.
	**/
	public IfcBoundaryEdgeCondition(){}

	/**
	* Constructs a new IfcBoundaryEdgeCondition object using the given parameters.
	*
	* @param Name OPTIONAL parameter of type IfcLabel
	* @param TranslationalStiffnessByLengthX OPTIONAL parameter of type IfcModulusOfTranslationalSubgradeReactionSelect
	* @param TranslationalStiffnessByLengthY OPTIONAL parameter of type IfcModulusOfTranslationalSubgradeReactionSelect
	* @param TranslationalStiffnessByLengthZ OPTIONAL parameter of type IfcModulusOfTranslationalSubgradeReactionSelect
	* @param RotationalStiffnessByLengthX OPTIONAL parameter of type IfcModulusOfRotationalSubgradeReactionSelect
	* @param RotationalStiffnessByLengthY OPTIONAL parameter of type IfcModulusOfRotationalSubgradeReactionSelect
	* @param RotationalStiffnessByLengthZ OPTIONAL parameter of type IfcModulusOfRotationalSubgradeReactionSelect
	**/
	public IfcBoundaryEdgeCondition(IfcLabel Name, IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthX, IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthY, IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthZ, IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthX, IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthY, IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthZ)
	{
		this.Name = Name;
		this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;
		this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;
		this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;
		this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;
		this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;
		this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;
		resolveInverses();
	}

	/**
	 * This method initializes the IfcBoundaryEdgeCondition object using the given parameters.
	*
	* @param Name OPTIONAL parameter of type IfcLabel
	* @param TranslationalStiffnessByLengthX OPTIONAL parameter of type IfcModulusOfTranslationalSubgradeReactionSelect
	* @param TranslationalStiffnessByLengthY OPTIONAL parameter of type IfcModulusOfTranslationalSubgradeReactionSelect
	* @param TranslationalStiffnessByLengthZ OPTIONAL parameter of type IfcModulusOfTranslationalSubgradeReactionSelect
	* @param RotationalStiffnessByLengthX OPTIONAL parameter of type IfcModulusOfRotationalSubgradeReactionSelect
	* @param RotationalStiffnessByLengthY OPTIONAL parameter of type IfcModulusOfRotationalSubgradeReactionSelect
	* @param RotationalStiffnessByLengthZ OPTIONAL parameter of type IfcModulusOfRotationalSubgradeReactionSelect
	**/
	public void setParameters(IfcLabel Name, IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthX, IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthY, IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthZ, IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthX, IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthY, IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthZ)
	{
		this.Name = Name;
		this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;
		this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;
		this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;
		this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;
		this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;
		this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void initialize(java.util.ArrayList<CloneableObject> parameters)
	{
		this.Name = (IfcLabel) parameters.get(0);
		this.TranslationalStiffnessByLengthX = (IfcModulusOfTranslationalSubgradeReactionSelect) parameters.get(1);
		this.TranslationalStiffnessByLengthY = (IfcModulusOfTranslationalSubgradeReactionSelect) parameters.get(2);
		this.TranslationalStiffnessByLengthZ = (IfcModulusOfTranslationalSubgradeReactionSelect) parameters.get(3);
		this.RotationalStiffnessByLengthX = (IfcModulusOfRotationalSubgradeReactionSelect) parameters.get(4);
		this.RotationalStiffnessByLengthY = (IfcModulusOfRotationalSubgradeReactionSelect) parameters.get(5);
		this.RotationalStiffnessByLengthZ = (IfcModulusOfRotationalSubgradeReactionSelect) parameters.get(6);
		resolveInverses();
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void destruct()
	{
		 super.destruct();
		listenerList = null;
	}

	private void resolveInverses()
	{
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	String[] getNonInverseAttributeTypes()
	{
		return IfcBoundaryEdgeCondition.nonInverseAttributes;	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	private java.util.HashSet<String> getRedefinedDerivedAttributeTypes()
	{
		java.util.HashSet<String> redefinedDerivedAttributes = new java.util.HashSet<String>();
		return redefinedDerivedAttributes;	}

	/**
 * This method returns the object IFC  STEP representation. This method is called by the IfcModel object to write IFC STEP files.
	 *
	 * @return the IFC STEP representation of this object
	**/
	public String getStepLine()
	{
		String stepString = new String("#"+this.stepLineNumber+"= ");
		stepString = stepString.concat("IFCBOUNDARYEDGECONDITION(");
		if(getRedefinedDerivedAttributeTypes().contains("Name")) stepString = stepString.concat("*,");
		else{
		if(this.Name != null)		stepString = stepString.concat(((RootInterface)this.Name).getStepParameter(IfcLabel.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("TranslationalStiffnessByLengthX")) stepString = stepString.concat("*,");
		else{
		if(this.TranslationalStiffnessByLengthX != null)		stepString = stepString.concat(((RootInterface)this.TranslationalStiffnessByLengthX).getStepParameter(IfcModulusOfTranslationalSubgradeReactionSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("TranslationalStiffnessByLengthY")) stepString = stepString.concat("*,");
		else{
		if(this.TranslationalStiffnessByLengthY != null)		stepString = stepString.concat(((RootInterface)this.TranslationalStiffnessByLengthY).getStepParameter(IfcModulusOfTranslationalSubgradeReactionSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("TranslationalStiffnessByLengthZ")) stepString = stepString.concat("*,");
		else{
		if(this.TranslationalStiffnessByLengthZ != null)		stepString = stepString.concat(((RootInterface)this.TranslationalStiffnessByLengthZ).getStepParameter(IfcModulusOfTranslationalSubgradeReactionSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("RotationalStiffnessByLengthX")) stepString = stepString.concat("*,");
		else{
		if(this.RotationalStiffnessByLengthX != null)		stepString = stepString.concat(((RootInterface)this.RotationalStiffnessByLengthX).getStepParameter(IfcModulusOfRotationalSubgradeReactionSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("RotationalStiffnessByLengthY")) stepString = stepString.concat("*,");
		else{
		if(this.RotationalStiffnessByLengthY != null)		stepString = stepString.concat(((RootInterface)this.RotationalStiffnessByLengthY).getStepParameter(IfcModulusOfRotationalSubgradeReactionSelect.class.isInterface())+",");
		else		stepString = stepString.concat("$,");
		}
		if(getRedefinedDerivedAttributeTypes().contains("RotationalStiffnessByLengthZ")) stepString = stepString.concat("*);");
		else{
		if(this.RotationalStiffnessByLengthZ != null)		stepString = stepString.concat(((RootInterface)this.RotationalStiffnessByLengthZ).getStepParameter(IfcModulusOfRotationalSubgradeReactionSelect.class.isInterface())+");");
		else		stepString = stepString.concat("$);");
		}
		return stepString;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	public String getStepParameter(boolean isSelectType)
	{
		return "#" + this.stepLineNumber;
	}

	/**
	 * This method returns the line number within a IFC  STEP representation. This method is called from other objects, where this one is referenced.
	 *
	 * @return the STEP line number
	**/
	public int getStepLineNumber()
	{
		return this.stepLineNumber;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepLineNumber(int number)
	{
		this.stepLineNumber = number;
	}

	/**
	* This method sets the TranslationalStiffnessByLengthX attribute to the given value.
	*
	* @param TranslationalStiffnessByLengthX DEMANDED value to set - may not be null
	**/
	public void setTranslationalStiffnessByLengthX(IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthX)
	{
		this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the TranslationalStiffnessByLengthX attribute.
	*
	* @return the value of TranslationalStiffnessByLengthX
	/**/
	public IfcModulusOfTranslationalSubgradeReactionSelect getTranslationalStiffnessByLengthX()
	{
		return this.TranslationalStiffnessByLengthX;
	}

	/**
	* This method sets the TranslationalStiffnessByLengthY attribute to the given value.
	*
	* @param TranslationalStiffnessByLengthY DEMANDED value to set - may not be null
	**/
	public void setTranslationalStiffnessByLengthY(IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthY)
	{
		this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the TranslationalStiffnessByLengthY attribute.
	*
	* @return the value of TranslationalStiffnessByLengthY
	/**/
	public IfcModulusOfTranslationalSubgradeReactionSelect getTranslationalStiffnessByLengthY()
	{
		return this.TranslationalStiffnessByLengthY;
	}

	/**
	* This method sets the TranslationalStiffnessByLengthZ attribute to the given value.
	*
	* @param TranslationalStiffnessByLengthZ DEMANDED value to set - may not be null
	**/
	public void setTranslationalStiffnessByLengthZ(IfcModulusOfTranslationalSubgradeReactionSelect TranslationalStiffnessByLengthZ)
	{
		this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the TranslationalStiffnessByLengthZ attribute.
	*
	* @return the value of TranslationalStiffnessByLengthZ
	/**/
	public IfcModulusOfTranslationalSubgradeReactionSelect getTranslationalStiffnessByLengthZ()
	{
		return this.TranslationalStiffnessByLengthZ;
	}

	/**
	* This method sets the RotationalStiffnessByLengthX attribute to the given value.
	*
	* @param RotationalStiffnessByLengthX DEMANDED value to set - may not be null
	**/
	public void setRotationalStiffnessByLengthX(IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthX)
	{
		this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the RotationalStiffnessByLengthX attribute.
	*
	* @return the value of RotationalStiffnessByLengthX
	/**/
	public IfcModulusOfRotationalSubgradeReactionSelect getRotationalStiffnessByLengthX()
	{
		return this.RotationalStiffnessByLengthX;
	}

	/**
	* This method sets the RotationalStiffnessByLengthY attribute to the given value.
	*
	* @param RotationalStiffnessByLengthY DEMANDED value to set - may not be null
	**/
	public void setRotationalStiffnessByLengthY(IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthY)
	{
		this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the RotationalStiffnessByLengthY attribute.
	*
	* @return the value of RotationalStiffnessByLengthY
	/**/
	public IfcModulusOfRotationalSubgradeReactionSelect getRotationalStiffnessByLengthY()
	{
		return this.RotationalStiffnessByLengthY;
	}

	/**
	* This method sets the RotationalStiffnessByLengthZ attribute to the given value.
	*
	* @param RotationalStiffnessByLengthZ DEMANDED value to set - may not be null
	**/
	public void setRotationalStiffnessByLengthZ(IfcModulusOfRotationalSubgradeReactionSelect RotationalStiffnessByLengthZ)
	{
		this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;
		fireChangeEvent();
	}

	/**
	* This method returns the value of the RotationalStiffnessByLengthZ attribute.
	*
	* @return the value of RotationalStiffnessByLengthZ
	/**/
	public IfcModulusOfRotationalSubgradeReactionSelect getRotationalStiffnessByLengthZ()
	{
		return this.RotationalStiffnessByLengthZ;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	void setStepParameter(java.util.ArrayList<CloneableObject> parameter)
	{
		this.stepParameter = parameter;
	}

	/**
	 * This method is used internally and should NOT be used for own purposes.
	**/
	java.util.ArrayList<CloneableObject> getStepParameter()
	{
		return this.stepParameter;
	}

	/**
	 * This method registers an ObjectChangeListener to this object. An event is fired whenever one of its values was changed.
	 * 
	 *@param listener the listener to register
	**/
	public void addObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	listenerList = new java.util.HashSet<ObjectChangeListener>(1,1);
		listenerList.add(listener);
	}

	/**
	 * This method unregisters an ObjectChangeListener from this object.
	 * 
	 *@param listener the listener to unregister
	**/
	public void removeObjectChangeListener(ObjectChangeListener listener)
	{
		if (listenerList == null)	return;
		listenerList.remove(listener);
		if (listenerList.size()==0) listenerList = null;
	}

	/**
	 * This method removes all currently registered ObjectChangeListeners from this object.
	**/
	public void removeAllObjectChangeListeners()
	{
		listenerList = null;
	}

	protected void fireChangeEvent()
	{
		if(listenerList == null) return;
		for(ObjectChangeListener listener : listenerList)
			listener.ifcModelObjectChange(this);
	}

	/**
	 * This method clones the object (deep cloning).
	 *
	 * @return the cloned object
	**/
	public Object clone()
	{
		IfcBoundaryEdgeCondition ifcBoundaryEdgeCondition = new IfcBoundaryEdgeCondition();
		if(this.Name != null)
			ifcBoundaryEdgeCondition.setName((IfcLabel)this.Name.clone());
		if(this.TranslationalStiffnessByLengthX != null)
			ifcBoundaryEdgeCondition.setTranslationalStiffnessByLengthX((IfcModulusOfTranslationalSubgradeReactionSelect)this.TranslationalStiffnessByLengthX.clone());
		if(this.TranslationalStiffnessByLengthY != null)
			ifcBoundaryEdgeCondition.setTranslationalStiffnessByLengthY((IfcModulusOfTranslationalSubgradeReactionSelect)this.TranslationalStiffnessByLengthY.clone());
		if(this.TranslationalStiffnessByLengthZ != null)
			ifcBoundaryEdgeCondition.setTranslationalStiffnessByLengthZ((IfcModulusOfTranslationalSubgradeReactionSelect)this.TranslationalStiffnessByLengthZ.clone());
		if(this.RotationalStiffnessByLengthX != null)
			ifcBoundaryEdgeCondition.setRotationalStiffnessByLengthX((IfcModulusOfRotationalSubgradeReactionSelect)this.RotationalStiffnessByLengthX.clone());
		if(this.RotationalStiffnessByLengthY != null)
			ifcBoundaryEdgeCondition.setRotationalStiffnessByLengthY((IfcModulusOfRotationalSubgradeReactionSelect)this.RotationalStiffnessByLengthY.clone());
		if(this.RotationalStiffnessByLengthZ != null)
			ifcBoundaryEdgeCondition.setRotationalStiffnessByLengthZ((IfcModulusOfRotationalSubgradeReactionSelect)this.RotationalStiffnessByLengthZ.clone());
		return ifcBoundaryEdgeCondition;
	}

	/**
	 * This method copys the object as shallow copy (all referenced objects are remaining).
	 *
	 * @return the cloned object
	**/
	public Object shallowCopy()
	{
		IfcBoundaryEdgeCondition ifcBoundaryEdgeCondition = new IfcBoundaryEdgeCondition();
		if(this.Name != null)
			ifcBoundaryEdgeCondition.setName(this.Name);
		if(this.TranslationalStiffnessByLengthX != null)
			ifcBoundaryEdgeCondition.setTranslationalStiffnessByLengthX(this.TranslationalStiffnessByLengthX);
		if(this.TranslationalStiffnessByLengthY != null)
			ifcBoundaryEdgeCondition.setTranslationalStiffnessByLengthY(this.TranslationalStiffnessByLengthY);
		if(this.TranslationalStiffnessByLengthZ != null)
			ifcBoundaryEdgeCondition.setTranslationalStiffnessByLengthZ(this.TranslationalStiffnessByLengthZ);
		if(this.RotationalStiffnessByLengthX != null)
			ifcBoundaryEdgeCondition.setRotationalStiffnessByLengthX(this.RotationalStiffnessByLengthX);
		if(this.RotationalStiffnessByLengthY != null)
			ifcBoundaryEdgeCondition.setRotationalStiffnessByLengthY(this.RotationalStiffnessByLengthY);
		if(this.RotationalStiffnessByLengthZ != null)
			ifcBoundaryEdgeCondition.setRotationalStiffnessByLengthZ(this.RotationalStiffnessByLengthZ);
		return ifcBoundaryEdgeCondition;
	}

	/**
	* This method returns the objects standard description.
	*
	* @return the standard description
	**/
	public String toString()
	{
		return "#"+ this.getStepLineNumber() + " " + this.getClass().getSimpleName();
	}


}
